[tool.poetry]
name = "algorithm-academy"
version = "0.1.0"
description = ""
authors = ["Alexander Kondratev", "Maxim Melnikov"]
readme = "README.md"

[tool.poetry.dependencies]
alembic = "^1.13.0"
asyncpg = "^0.29.0"
fastapi = "^0.104.1"
pydantic = "^2.5.2"
pydantic-settings = "^2.1.0"
python = "^3.11"
python-dotenv = "^1.0.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.23"}
uvicorn = "^0.24.0.post1"
gunicorn = "^21.2.0"

[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
pre-commit = "^3.3.3"
pytest = "^7.4.0"
ruff = "^0.1.7"

[tool.isort]
case_sensitive = false
combine_as_imports = true
extend_skip = ["_version.py", "versioneer.py", "__init__.py"]
extend_skip_glob = ["docs/*", "*venv*/*"]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
lines_after_imports = -1
multi_line_output = 3
profile = "black"
reverse_relative = true
skip = [".gitignore", ".dockerignore", "migrations"]
use_parentheses = true
wrap_length = 88

[tool.ruff]
target-version = "py311"
fix = true
unsafe-fixes = true
line-length = 88
select = ["ALL"]
ignore = ["D1", "D203", "D213", "ANN101", "RUF012"]
extend-exclude = ["migrations"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.extend-per-file-ignores]
"tests/*.py" = ["S101", "S106"]
"alembic/*.py" = ["INP001", "ERA001"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
